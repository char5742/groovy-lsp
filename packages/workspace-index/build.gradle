plugins {
    id 'java-library'
    alias(libs.plugins.jmh)
}

dependencies {
    // Module dependencies
    implementation project(':shared')  // Includes jMolecules transitively
    implementation project(':groovy-core')
    implementation project(':lsp-protocol')

    // Gradle Tooling API for build system integration
    implementation libs.gradle.tooling.api

    // Maven Resolver API for Maven dependency resolution
    implementation libs.bundles.maven.resolver

    // LMDB for high-performance symbol indexing
    implementation libs.lmdb.java

    // ASM for JAR file analysis
    implementation libs.asm
    implementation libs.asm.commons
    implementation libs.asm.tree

    // API Guardian for package visibility annotations
    compileOnly libs.apiguardian.api

    // Test dependencies
    testImplementation libs.bundles.testing
    testImplementation libs.mockito.core

    // JMH for performance testing
    jmhImplementation libs.bundles.jmh
    jmhAnnotationProcessor libs.jmh.generator.annprocess
}

test {
    useJUnitPlatform()

    jvmArgs = [
        '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
        '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
        '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED'
    ]
}

jar {
    manifest {
        attributes(
            'Automatic-Module-Name': 'com.groovy.lsp.workspace'
        )
    }
}

jmh {
    fork = 1
    warmupIterations = 3
    iterations = 5
    threads = 1
    resultFormat = 'JSON'
    jvmArgs = [
        '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
        '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
        '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED'
    ]
}
