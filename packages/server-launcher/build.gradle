plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow'
}

dependencies {
    // Internal module dependencies
    implementation project(':lsp-protocol')
    implementation project(':groovy-core')
    implementation project(':jdt-adapter')
    implementation project(':codenarc-lint')
    implementation project(':workspace-index')
    implementation project(':formatting')
    
    // LSP4J dependencies
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.23.1'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.23.1'
    
    // Guice for dependency injection
    implementation 'com.google.inject:guice:7.0.0'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.16'
    
    // Error tracking
    implementation 'io.sentry:sentry:7.20.0'
}

application {
    mainClass = 'com.groovy.lsp.server.launcher.Main'
}

shadowJar {
    archiveBaseName = 'groovy-language-server'
    archiveClassifier = ''
    archiveVersion = project.version
    
    // Merge service files
    mergeServiceFiles()
    
    manifest {
        attributes(
            'Main-Class': 'com.groovy.lsp.server.launcher.Main',
            'Implementation-Title': 'Groovy Language Server',
            'Implementation-Version': project.version,
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ss'),
            'Built-JDK': System.getProperty('java.version')
        )
    }
}

test {
    useJUnitPlatform()
}

// Task to run the server
task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.groovy.lsp.server.launcher.Main'
    standardInput = System.in
    standardOutput = System.out
    
    // JVM options for better performance
    jvmArgs = [
        '-Xms256m',
        '-Xmx2g',
        '-XX:+UseG1GC',
        '-XX:+UseStringDeduplication'
    ]
}