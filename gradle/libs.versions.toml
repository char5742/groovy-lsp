[versions]
java = "21"
groovy = "4.0.27"
lsp4j = "0.23.1"
jdt-core = "3.39.0"
eclipse-core-runtime = "3.29.0"
eclipse-core-resources = "3.19.0"
eclipse-text = "3.13.0"
codenarc = "3.5.0"
google-java-format = "1.25.2"
junit = "5.11.4"
mockk = "1.13.14"
mockito = "5.14.2"
gradle-shadow = "8.1.1"
gradle-versions = "0.51.0"
slf4j = "2.0.16"
logback = "1.5.16"
guice = "7.0.0"
lmdb = "0.9.0"
sentry = "7.20.0"
jmh = "1.37"
assertj = "3.27.3"
gradle-tooling-api = "8.5"
apiguardian = "1.1.2"
guava = "33.4.0-jre"
archunit = "1.3.0"
jmolecules-bom = "2023.1.3"
jmolecules-ddd = "1.9.0"
jmolecules-events = "1.9.0"
jmolecules-architecture = "1.9.0"
jspecify = "1.0.0"
errorprone-core = "2.26.1"
nullaway = "0.11.3"
errorprone-plugin = "4.2.0"
nullaway-plugin = "2.2.0"

[libraries]
# Groovy
groovy = { module = "org.apache.groovy:groovy", version.ref = "groovy" }
groovy-all = { module = "org.apache.groovy:groovy-all", version.ref = "groovy" }
groovy-json = { module = "org.apache.groovy:groovy-json", version.ref = "groovy" }
groovy-xml = { module = "org.apache.groovy:groovy-xml", version.ref = "groovy" }
groovy-nio = { module = "org.apache.groovy:groovy-nio", version.ref = "groovy" }
groovy-templates = { module = "org.apache.groovy:groovy-templates", version.ref = "groovy" }

# LSP4J
lsp4j = { module = "org.eclipse.lsp4j:org.eclipse.lsp4j", version.ref = "lsp4j" }
lsp4j-jsonrpc = { module = "org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc", version.ref = "lsp4j" }
lsp4j-generator = { module = "org.eclipse.lsp4j:org.eclipse.lsp4j.generator", version.ref = "lsp4j" }
lsp4j-debug = { module = "org.eclipse.lsp4j:org.eclipse.lsp4j.debug", version.ref = "lsp4j" }

# JDT Core (Groovy-Eclipse)
jdt-core = { module = "org.eclipse.jdt:org.eclipse.jdt.core", version.ref = "jdt-core" }
groovy-eclipse-batch = { module = "org.codehaus.groovy:groovy-eclipse-batch", version = "4.0.15-01" }

# Eclipse Platform
eclipse-core-runtime = { module = "org.eclipse.platform:org.eclipse.core.runtime", version.ref = "eclipse-core-runtime" }
eclipse-core-resources = { module = "org.eclipse.platform:org.eclipse.core.resources", version.ref = "eclipse-core-resources" }
eclipse-text = { module = "org.eclipse.platform:org.eclipse.text", version.ref = "eclipse-text" }

# CodeNarc
codenarc = { module = "org.codenarc:CodeNarc", version.ref = "codenarc" }

# Google Java Format
google-java-format = { module = "com.google.googlejavaformat:google-java-format", version.ref = "google-java-format" }

# Testing
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

# Logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Dependency Injection
guice = { module = "com.google.inject:guice", version.ref = "guice" }

# Database (for symbol indexing)
lmdb-java = { module = "org.lmdbjava:lmdbjava", version.ref = "lmdb" }

# Error Tracking
sentry = { module = "io.sentry:sentry", version.ref = "sentry" }

# Performance
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }

# Build Tools
gradle-tooling-api = { module = "org.gradle:gradle-tooling-api", version.ref = "gradle-tooling-api" }

# Architecture & Design
apiguardian-api = { module = "org.apiguardian:apiguardian-api", version.ref = "apiguardian" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
archunit = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }

# jMolecules
jmolecules-bom = { module = "org.jmolecules:jmolecules-bom", version.ref = "jmolecules-bom" }
jmolecules-ddd = { module = "org.jmolecules:jmolecules-ddd", version.ref = "jmolecules-ddd" }
jmolecules-events = { module = "org.jmolecules:jmolecules-events", version.ref = "jmolecules-events" }
jmolecules-architecture = { module = "org.jmolecules:jmolecules-architecture", version.ref = "jmolecules-architecture" }

# Null Safety
jspecify = { module = "org.jspecify:jspecify", version.ref = "jspecify" }

# Static Analysis
errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone-core" }
nullaway = { module = "com.uber.nullaway:nullaway", version.ref = "nullaway" }

[bundles]
groovy = ["groovy", "groovy-json", "groovy-xml", "groovy-nio", "groovy-templates"]
lsp4j = ["lsp4j", "lsp4j-jsonrpc"]
testing = ["junit-jupiter", "junit-jupiter-params", "mockk", "assertj-core"]
logging = ["slf4j-api", "logback-classic"]
jmh = ["jmh-core", "jmh-generator-annprocess"]
jmolecules = ["jmolecules-ddd", "jmolecules-events", "jmolecules-architecture"]

[plugins]
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "gradle-shadow" }
versions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions" }
errorprone = { id = "net.ltgt.errorprone", version.ref = "errorprone-plugin" }
nullaway = { id = "net.ltgt.nullaway", version.ref = "nullaway-plugin" }