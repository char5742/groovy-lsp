plugins {
    alias(libs.plugins.versions) apply false
    alias(libs.plugins.shadow) apply false
    alias(libs.plugins.errorprone) apply false
    alias(libs.plugins.nullaway) apply false
}

allprojects {
    group = 'com.groovy.lsp'
    version = '0.1.0-SNAPSHOT'
    
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url 'https://repo.gradle.org/gradle/libs-releases/'
        }
        maven {
            url 'https://groovy.jfrog.io/artifactory/libs-release-local'
        }
        maven {
            url 'https://repo.eclipse.org/releases/latest'
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'net.ltgt.nullaway'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(23)
        }
        // Temporarily disable module path to fix build issues
        modularity.inferModulePath = false
    }
    
    dependencies {
        implementation 'org.apache.groovy:groovy:4.0.27'
        implementation 'org.apache.groovy:groovy-json:4.0.27'
        implementation 'org.apache.groovy:groovy-xml:4.0.27'
        implementation 'org.apache.groovy:groovy-nio:4.0.27'
        implementation 'org.apache.groovy:groovy-templates:4.0.27'
        implementation 'org.slf4j:slf4j-api:2.0.16'
        implementation 'ch.qos.logback:logback-classic:1.5.16'
        
        // Error Prone and NullAway
        errorprone libs.errorprone.core
        errorprone libs.nullaway
        
        testImplementation 'org.junit.jupiter:junit-jupiter:5.11.4'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.11.4'
        testImplementation 'io.mockk:mockk:1.13.14'
        testImplementation 'org.assertj:assertj-core:3.27.3'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }
    
    test {
        useJUnitPlatform()
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs += ['-parameters']
        
        // Conditionally apply Error Prone based on Java version
        def javaVersion = JavaVersion.current()
        if (javaVersion <= JavaVersion.VERSION_21) {
            // Error Prone configuration for Java 21 and below
            options.errorprone {
                enabled = true
                disableWarningsInGeneratedCode = true
                
                // NullAway configuration
                check("NullAway", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
                option("NullAway:AnnotatedPackages", "com.groovy.lsp")
                option("NullAway:TreatGeneratedAsUnannotated", "true")
                option("NullAway:OnlyNullMarked", "true") // Use with jSpecify @NullMarked
                option("NullAway:ExcludedFieldAnnotations", "org.mockito.Mock,org.mockito.Spy")
                
                // Disable specific Error Prone checks that may conflict with Groovy
                disable("UnusedVariable") // Groovy's dynamic nature can trigger false positives
                disable("StringSplitter") // Groovy has its own string handling
            }
        } else {
            // Disable Error Prone for Java 22+ due to compatibility issues
            options.errorprone.enabled = false
            logger.warn("Error Prone is disabled for Java ${javaVersion} due to compatibility issues. Consider using Java 21 for full static analysis support.")
        }
    }
    
    tasks.withType(GroovyCompile) {
        options.encoding = 'UTF-8'
        groovyOptions.parameters = true
    }
    
    configurations.all {
        resolutionStrategy {
            capabilitiesResolution {
                withCapability('org.codehaus.groovy:groovy') {
                    selectHighestVersion()
                }
                withCapability('org.codehaus.groovy:groovy-json') {
                    selectHighestVersion()
                }
                withCapability('org.codehaus.groovy:groovy-xml') {
                    selectHighestVersion()
                }
                withCapability('org.codehaus.groovy:groovy-templates') {
                    selectHighestVersion()
                }
            }
            force 'org.apache.groovy:groovy:4.0.27'
            force 'org.apache.groovy:groovy-json:4.0.27'
            force 'org.apache.groovy:groovy-xml:4.0.27'
            force 'org.apache.groovy:groovy-nio:4.0.27'
            force 'org.apache.groovy:groovy-templates:4.0.27'
        }
    }
}