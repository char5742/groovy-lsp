plugins {
    alias(libs.plugins.versions) apply false
    alias(libs.plugins.shadow) apply false
    alias(libs.plugins.errorprone) apply false
    alias(libs.plugins.nullaway) apply false
}

allprojects {
    group = 'com.groovy.lsp'
    version = '0.1.0-SNAPSHOT'
    
    repositories {
        mavenCentral()
        gradlePluginPortal()
        maven {
            url 'https://repo.gradle.org/gradle/libs-releases/'
        }
        maven {
            url 'https://groovy.jfrog.io/artifactory/libs-release-local'
        }
        maven {
            url 'https://download.eclipse.org/releases/latest/'
        }
        maven {
            url 'https://repo.eclipse.org/content/repositories/groovy-releases/'
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'net.ltgt.nullaway'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(23)
        }
        
        // JPMS有効化設定
        // 現状では外部ライブラリの制約により、sharedとgroovy-coreのみJPMS対応可能
        def enableJpms = project.name in ['shared', 'groovy-core']
        
        modularity.inferModulePath = enableJpms
        
        if (!enableJpms) {
            logger.debug("JPMS disabled for module: ${project.name} (auto-module dependencies)")
        }
    }
    
    dependencies {
        // Groovy dependencies
        implementation libs.bundles.groovy
        
        // Logging
        implementation libs.bundles.logging
        
        // Error Prone and NullAway
        errorprone libs.errorprone.core
        errorprone libs.nullaway
        
        // Testing
        testImplementation libs.bundles.testing
        testImplementation libs.archunit
        testImplementation libs.jmolecules.integrations.archunit
        testImplementation libs.jmolecules.onion.architecture
        testRuntimeOnly libs.junit.platform.launcher
    }
    
    test {
        useJUnitPlatform()
    }
    
    tasks.withType(JavaCompile) {
        options.errorprone {
            enabled = true
            disableWarningsInGeneratedCode = true
            
            // NullAway configuration
            check("NullAway", net.ltgt.gradle.errorprone.CheckSeverity.ERROR)
            option("NullAway:AnnotatedPackages", "com.groovy.lsp")
            option("NullAway:TreatGeneratedAsUnannotated", "true")
            option("NullAway:ExcludedFieldAnnotations", "org.mockito.Mock,org.mockito.Spy")
        }
        
    }
    
    tasks.withType(GroovyCompile) {
        options.encoding = 'UTF-8'
        groovyOptions.parameters = true
    }
    
    configurations.all {
        resolutionStrategy {
            // Apache Groovyバージョンの統一
            def groovyVersion = libs.versions.groovy.get()
            
            // Apache Groovyモジュールのバージョンを統一
            force "org.apache.groovy:groovy:${groovyVersion}"
            force "org.apache.groovy:groovy-json:${groovyVersion}"
            force "org.apache.groovy:groovy-xml:${groovyVersion}"
            force "org.apache.groovy:groovy-nio:${groovyVersion}"
            force "org.apache.groovy:groovy-templates:${groovyVersion}"
            force "org.apache.groovy:groovy-all:${groovyVersion}"
            force "org.apache.groovy:groovy-ant:${groovyVersion}"
            force "org.apache.groovy:groovy-groovydoc:${groovyVersion}"
            force "org.apache.groovy:groovy-docgenerator:${groovyVersion}"
        }
    }
}